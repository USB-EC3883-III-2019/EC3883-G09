=============================================================================
List of generated methods in project: main

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "MBit1"     (component MultiBitIO)
   - MBit1_GetDir -Returns selected direction.
   - MBit1_GetVal -Returns the value of the Input/Output component. Component calls ancestor's [GetVal] for each bit and 
                composes value according its order. That is [direction] independent, for details look into ancestor 
                documentation.
   - MBit1_PutVal -Specified value is passed to the Input/Output component. Component calls ancestor's [PutVal] for each bit 
                with corresponded value. That is [direction] independent, for details look into ancestor documentation.  This 
                method is enabled only if the Direction = _[output]_ or _[input/output]_.
   - MBit1_GetBit -Returns the value of the specified bit/pin of the Input/Output component. For specified bit is called 
                ancestor's [GetVal] method. That is [direction] independent, for details look into ancestor documentation. Pins 
                are addressed form zero, where 0 is equaled to LSB. In case incorrept pin number value is used method returns 0.
   - MBit1_PutBit -Specified value is passed to the specified bit/pin of the Input/Output component. For specified bit is 
                called ancestor's [PutVal] method. That is [direction] independent, for details look into ancestor 
                documentation..  This method is enabled only if the Direction = _[output]_ or _[input/output]_. Pins are 
                addressed form zero, where 0 is equaled to LSB.
   - MBit1_SetBit -Sets (to one) the specified bit of the Input/Output component. It is the same as [PutBit(Bit, TRUE)].  This 
                method is enabled only if the Direction = _[output]_ or _[input/output]_). Pins are addressed form zero, where 
                0 is equaled to LSB.
   - MBit1_ClrBit -Clears (sets to zero) the specified bit of the Input/Output component. It is the same as [PutBit(Bit, FALSE)
                ].  This method is enabled only if the Direction = _[output]_ or _[input/output]_). Pins are addressed form 
                zero, where 0 is equaled to LSB.
   - MBit1_NegBit -Negates (inverts) the specified bit of the Input/Output component. It is the same as [PutBit(Bit,!GetBit(Bit)
                )].  This method is enabled only if the Direction = _[output]_ or _[input/output]_). Pins are addressed form 
                zero, where 0 is equaled to LSB.

Module "Trigger"   (component BitIO)
   - Trigger_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - Trigger_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - Trigger_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a memory 
                or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - Trigger_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.
   - Trigger_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if 
                the direction = _[output]_ or _[input/output]_.

Module "TI1"       (component TimerInt)
   - TI1_Enable -This method enables the component - it starts the timer. Events may be generated (<DisableEvent>/<EnableEvent>)
                .
   - TI1_Disable -This method disables the component - it stops the timer. No events will be generated.

Module "TI2"       (component TimerInt)

Module "Echo"      (component Capture)
   - Echo_Enable -This method enables the component - it starts the capture. Events may be generated 
                (<DisableEvent>/<EnableEvent>).
   - Echo_Reset -This method resets the counter register (see implementation note in <General Info>).
   - Echo_GetCaptureValue -This method gets the last value captured by enabled timer (see implementation note in <General Info>)
                . The method does not return valid value after initialization or after <Reset> until new capture event (even if 
                the returned Error code is ERR_OK).

Module "Cpu"       (component MC9S08QE128_80)
   - Cpu_EnableInt -Enables maskable interrupts
   - Cpu_DisableInt -Disables maskable interrupts

===================================================================================
